apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webhook-relay-ingress
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: webhook-relay-server-svc
                port:
                  number: 3000
            path: /subscribe
            pathType: Prefix
          - backend:
              service:
                name: webhook-relay-server-svc
                port:
                  number: 3000
            path: /webhooks
            pathType: Prefix
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-relay-server-svc
spec:
  ports:
    - name: web
      port: 3000
      targetPort: 3000
  selector:
    app: webhook-relay-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: webhook-relay-server
spec:
 selector:
   matchLabels:
     app: webhook-relay-server
 replicas: 3
 template:
   metadata:
     labels:
       app: webhook-relay-server
   spec:
     containers:
       - name: webhook-relay-server
         image: quay.io/danisoi/webhook-relay-server:test5
#         imagePullPolicy: Never
         ports:
           - containerPort: 3000
         env:
           - name: REDIS_URL
             value: redis://redis-master:6379
         readinessProbe:
           httpGet:
             path: /ready
             port: 9000
           failureThreshold: 1
           initialDelaySeconds: 5
           periodSeconds: 5
           successThreshold: 1
           timeoutSeconds: 5
         livenessProbe:
           httpGet:
             path: /live
             port: 9000
           failureThreshold: 3
           initialDelaySeconds: 10
           # Allow sufficient amount of time (90 seconds = periodSeconds * failureThreshold)
           # for the registered shutdown handlers to run to completion.
           periodSeconds: 30
           successThreshold: 1
           # Setting a very low timeout value (e.g. 1 second) can cause false-positive
           # checks and service interruption.
           timeoutSeconds: 5
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: redis-master
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
        - name: master
          image: redis  # or just image: redis
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
